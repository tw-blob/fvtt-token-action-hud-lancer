const t={ID:"token-action-hud-lancer"},e={ID:"token-action-hud-core"},s="1.5",i={activate:"tokenActionHud.lancer.activate",activation:"tokenActionHud.lancer.activation","basic-attack":"tokenActionHud.lancer.basicAttack","basic-tech":"tokenActionHud.lancer.basicTech",bond:"tokenActionHud.lancer.bond",core:"tokenActionHud.lancer.core",deactivate:"tokenActionHud.lancer.deactivate",frame:"tokenActionHud.lancer.frame","free-action":"tokenActionHud.lancer.freeAction","full-action":"tokenActionHud.lancer.fullAction","full-tech":"tokenActionHud.lancer.fullTech",invade:"tokenActionHud.lancer.invade",other:"tokenActionHud.lancer.other","pilot-weapon":"tokenActionHud.lancer.pilotWeapon","quick-action":"tokenActionHud.lancer.quickAction","quick-tech":"tokenActionHud.lancer.quickTech",protocol:"tokenActionHud.lancer.protocol",reaction:"tokenActionHud.lancer.reaction",stat:"tokenActionHud.lancer.stat",status:"tokenActionHud.lancer.status",system:"tokenActionHud.lancer.system",talent:"tokenActionHud.lancer.talent",tech:"tokenActionHud.lancer.tech",weapon:"tokenActionHud.lancer.weapon"},n={None:{groupId:"other-actions",actionType:"other"},Passive:{groupId:"other-actions",actionType:"other"},Quick:{groupId:"quick-actions",actionType:"quick-action"},"Quick Tech":{groupId:"quick-techs",actionType:"quick-tech"},Invade:{groupId:"invades",actionType:"invade"},Full:{groupId:"full-actions",actionType:"full-action"},"Full Tech":{groupId:"full-techs",actionType:"full-tech"},Other:{groupId:"other-actions",actionType:"other"},Reaction:{groupId:"reactions",actionType:"reaction"},Protocol:{groupId:"protocols",actionType:"protocol"},Free:{groupId:"free-actions",actionType:"free-action"}},o="New Action",a={attacks:{id:"attacks",name:"tokenActionHud.lancer.attacks",type:"system"},basicAttack:{id:"basic-attack",name:"tokenActionHud.lancer.basicAttack",type:"system"},basicTech:{id:"basic-tech",name:"tokenActionHud.lancer.basicTech",type:"system"},bonds:{id:"bonds",name:"tokenActionHud.lancer.bonds",type:"system"},combat:{id:"combat",name:"tokenActionHud.lancer.combat",type:"system"},coreBonuses:{id:"core-bonuses",name:"tokenActionHud.lancer.coreBonuses",type:"system"},corePower:{id:"core-power",name:"tokenActionHud.lancer.corePower",type:"system"},deployables:{id:"deployables",name:"tokenActionHud.lancer.deployables",type:"system"},freeActions:{id:"free-actions",name:"tokenActionHud.lancer.freeActions",type:"system"},fullActions:{id:"full-actions",name:"tokenActionHud.lancer.fullActions",type:"system"},fullTechs:{id:"full-techs",name:"tokenActionHud.lancer.fullTechs",type:"system"},grit:{id:"grit",name:"tokenActionHud.lancer.grit",type:"system"},hase:{id:"hase",name:"tokenActionHud.lancer.hase",type:"system"},invades:{id:"invades",name:"tokenActionHud.lancer.invades",type:"system"},macros:{id:"macros",name:"tokenActionHud.lancer.macros",type:"system"},mechWeapons:{id:"mech-weapons",name:"tokenActionHud.lancer.mechWeapons",type:"system"},other:{id:"other",name:"tokenActionHud.lancer.other",type:"system"},pilotGear:{id:"pilot-gear",name:"tokenActionHud.lancer.pilotGear",type:"system"},pilotWeapons:{id:"pilot-weapons",name:"tokenActionHud.lancer.pilotWeapons",type:"system"},protocols:{id:"protocols",name:"tokenActionHud.lancer.protocols",type:"system"},quickActions:{id:"quick-actions",name:"tokenActionHud.lancer.quickActions",type:"system"},quickTechs:{id:"quick-techs",name:"tokenActionHud.lancer.quickTechs",type:"system"},reactions:{id:"reactions",name:"tokenActionHud.lancer.reactions",type:"system"},refresh:{id:"refresh",name:"tokenActionHud.lancer.refresh",type:"system"},repair:{id:"repair",name:"tokenActionHud.lancer.repair",type:"system"},skills:{id:"skills",name:"tokenActionHud.lancer.skills",type:"system"},stats:{id:"stats",name:"tokenActionHud.lancer.stats",type:"system"},statuses:{id:"statuses",name:"tokenActionHud.lancer.statuses",type:"system"},systems:{id:"systems",name:"tokenActionHud.lancer.systems",type:"system"},talents:{id:"talents",name:"tokenActionHud.lancer.talents",type:"system"},techs:{id:"techs",name:"tokenActionHud.lancer.techs",type:"system"},traits:{id:"traits",name:"tokenActionHud.lancer.traits",type:"system"},weaponMods:{id:"weapon-mods",name:"tokenActionHud.lancer.weaponMods",type:"system"}},c={CORE_BONUS:"core_bonus",DEPLOYABLE:"deployable",FRAME:"frame",MECH:"mech",LICENSE:"license",NPC:"npc",NPC_CLASS:"npc_class",NPC_TEMPLATE:"npc_template",NPC_FEATURE:"npc_feature",WEAPON_MOD:"weapon_mod",MECH_SYSTEM:"mech_system",MECH_WEAPON:"mech_weapon",ORGANIZATION:"organization",PILOT_ARMOR:"pilot_armor",PILOT_GEAR:"pilot_gear",PILOT_WEAPON:"pilot_weapon",PILOT:"pilot",RESERVE:"reserve",SKILL:"skill",STATUS:"status",TALENT:"talent",BOND:"bond"},l=">",r={bond:{groupId:"bonds",actionType:"bond"},frame:{groupId:"traits",actionType:"activation"},mech_system:{groupId:"mech-systems",actionType:"system"},mech_weapon:{groupId:"mech-weapons",actionType:"weapon"},pilot_weapon:{groupId:"pilot-weapons",actionType:"pilot-weapon"},skill:{groupId:"skills",actionType:"skill"},stat:{groupId:"stats",actionType:"stat"},talent:{groupId:"talents",actionType:"talent"},weapon_mod:{groupId:"weapon-mods",actionType:"system"}},d={"full-repair":"tokenActionHud.lancer.fullRepair",overcharge:"tokenActionHud.lancer.overcharge",overheat:"tokenActionHud.lancer.overheat",recharge:"tokenActionHud.lancer.recharge",stabilize:"tokenActionHud.lancer.stabilize",structure:"tokenActionHud.lancer.structure"},u={Reaction:{groupId:"reactions",actionType:"system"},System:{groupId:"systems",actionType:"system"},Tech:{groupId:"techs",actionType:"tech"},Trait:{groupId:"traits",actionType:"system"},Weapon:{groupId:"mech-weapons",actionType:"weapon"}},h={hull:"tokenActionHud.lancer.hul",agi:"tokenActionHud.lancer.agi",sys:"tokenActionHud.lancer.sys",eng:"tokenActionHud.lancer.eng",grit:"tokenActionHud.lancer.grit",tier:"tokenActionHud.lancer.tier"};let m=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{m=class Utils{static getSetting(s,i=null){let n=i??null;try{n=game.settings.get(t.ID,s)}catch{e.api.Logger.debug(`Setting '${s}' not found`)}return n}static async setSetting(s,i){try{i=await game.settings.set(t.ID,s,i),e.api.Logger.debug(`Setting '${s}' set to '${i}'`)}catch{e.api.Logger.debug(`Setting '${s}' not found`)}}}}));let p=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{p=class ActionHandler extends t.api.ActionHandler{actors=null;tokens=null;actorType=null;pilot=null;items=null;showDestroyedItems=null;showItemsWithoutActivations=null;showItemsWithoutUses=null;showUnchargedNpcFeatures=null;showUnequippedItems=null;showUnloadedWeapons=null;groupIds=null;nonActivations=null;featureActions=null;async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this.#t(),this.tokens=this.token?[this.token]:this.#e(),this.actorType=this.actor?.type,this.actor){let e=this.actor.items;this.pilot=this.actor.system.pilot?this.actor.system.pilot.value:null,e=t.api.Utils.sortItemsByName(e),this.items=e}switch(this.showDestroyedItems=m.getSetting("showDestroyedItems"),this.showItemsWithoutActivations=m.getSetting("showItemsWithoutActivations"),this.showItemsWithoutUses=m.getSetting("showItemsWithoutUses"),this.showUnequippedItems=m.getSetting("showUnequippedItems"),this.showUnchargedNpcFeatures=m.getSetting("showUnchargedNpcFeatures"),this.showUnloadedWeapons=m.getSetting("showUnloadedWeapons"),this.groupIds=e,this.nonActivations=["None","Passive","Other"],this.actorType){case c.MECH:this.#s(),this.#i();break;case c.PILOT:this.#i();break;case c.NPC:this.#n()}}#s(){if(this.#o(),this.#a(),this.#c(),this.#l(),this.#r(),this.showUnequippedItems){this.#d();const e=t.api.Utils.sortItemsByName(this.pilot.items);this.#d(e)}else this.#u(),this.#h()}#m(){this.#o(),this.#a(),this.#l(),this.#r()}#n(){this.#o(),this.#a(),this.#c(),this.#p(),this.#l(),this.#r()}#i(){this.pilot||(this.showUnequippedItems?this.#d():this.#h(),this.#o(),this.#a(),this.#l(),this.#r())}#y(e,s,a="",c="system.actions"){if(0===e.length)return;const d=new Map;for(const t of e.keys()){const i=e[t].activation;if(!this.showItemsWithoutActivations&&this.nonActivations.includes(i))continue;d.has(i)||d.set(i,new Map);const n=[s,`${c}.${t}`].join(l),a=e[t].name===o?this.items.get(s).name:e[t].name,r={...e[t],name:a};d.get(i).set(n,r)}for(const[e,s]of d){const o=n[e]?.groupId,c=r[a]?.actionType??n[e]?.actionType;if(!o||!c)continue;const l={id:o,type:"system"},d=[...s].map((([e,s])=>{const n=s.name,o=t.api.Utils.i18n(i[c]),a=`${o?`${o}: `:""}${n}`,l=["activation",e].join(this.delimiter);return{id:e,name:n,listName:a,encodedValue:l}})).sort(this.#g);this.addActions(d,l)}}#A(e,s=""){if(0===e.size)return;const a=new Map;for(const[t,s]of e){const e=s.system.actions;for(const i of e.keys()){const n=e[i].activation;if(!this.showItemsWithoutActivations&&this.nonActivations.includes(n))continue;a.has(n)||a.set(n,new Map);const c=[t,`system.actions.${i}`].join(l),r=e[i].name===o?s.name:e[i].name,d={...e[i],name:r};a.get(n).set(c,d)}}for(const[e,o]of a){const a=n[e]?.groupId,c=r[s]?.actionType??n[e]?.actionType;if(!a||!c)continue;const l={id:a,type:"system"},d=[...o].map((([e,s])=>{const n=s.name,o=t.api.Utils.i18n(i[c]),a=`${o?`${o}: `:""}${n}`,l=["activation",e].join(this.delimiter);return{id:e,name:n,listName:a,encodedValue:l}})).sort(this.#g);this.addActions(d,l)}}#o(){if(0===this.tokens?.length)return;const e="basic";[{key:"basic-attack",type:"weapon"},{key:"basic-tech",type:"tech"}].map((s=>{const n=s.key,o=t.api.Utils.i18n(i[s.key]),a=t.api.Utils.i18n(i[s.type]),c=[{id:n,name:o,listName:`${a?`${a}: `:""}${o}`,encodedValue:[s.key,e].join(this.delimiter)}],l={id:n,type:"system"};this.addActions(c,l)}))}#k(e){if(0===e.size)return;const s=r[c.BOND]?.actionType,n=r[c.BOND]?.groupId;if(!n||!s)return;const o={id:n,type:"system"};let a=[];for(const[n,o]of e){const e=o.system.powers;for(const o of e.keys()){const c=e[o];if(!c.unlocked)continue;if(!this.showItemsWithoutUses&&c.uses&&0===c.uses.value)continue;const r=[n,o].join(l),d=c.name,u=t.api.Utils.i18n(i[s]),h=`${u?`${u}: `:""}${d}`,m=[s,r].join(this.delimiter);a.push({id:r,name:d,listName:h,encodedValue:m})}const c=n,r=`Refresh ${o.name}`,d=`Refresh: ${o.name}`,u=["refresh-powers",n].join(this.delimiter);a.push({id:c,name:r,listName:d,encodedValue:u})}a.sort(this.#g),this.addActions(a,o)}#a(){if(0===this.tokens?.length)return;const e="combat";["activate","deactivate"].map((s=>{const n=s,o=t.api.Utils.i18n(i[s]),a=t.api.Utils.i18n(i[e]),c=`${a?`${a}: `:""}${o}`,l=[e,n].join(this.delimiter),r=[{id:n,name:o,listName:c,encodedValue:l}],d={id:e,type:"system"};this.addActions(r,d)}))}#b(e){if(0===e.size)return;const s="frame";for(const[n,o]of e){const e=o.system.core_system.active_actions,a=o.system.core_system.passive_actions,r=o.system.traits;this.#y(e,n,s,"system.core_system.active_actions"),this.#y(a,n,s,"system.core_system.passive_actions"),this.#y(r,n,"","system.traits");const d=[n,"system.core_system"].join(l),u=o.system.core_system.active_name,h=t.api.Utils.i18n(i[c.FRAME]),m=`${h?`${h}: `:""}${u}`,p=["core",d].join(this.delimiter),y=[{id:d,name:u,listName:m,encodedValue:p}],g={id:"core-power",type:"system"};this.addActions(y,g)}}#d(t=null){const e=t??this.items;if(0===e.size)return;const s=new Map;for(const[t,i]of e){const e=i.system.type??i.type;if(this.#f(i)){const n=s.get(e)??new Map;n.set(t,i),s.set(e,n)}}for(const[t,e]of s)switch(t){case c.BOND:this.#k(e);break;case c.FRAME:this.#b(e);break;case c.MECH_WEAPON:case c.PILOT_WEAPON:case c.WEAPON_MOD:this.#I(e,t);case c.MECH_SYSTEM:this.#A(e,t);break;case c.SKILL:this.#w(e);break;case c.TALENT:this.#H(e)}}#c(){if(0===this.actors?.length)return;const e=["stabilize","full-repair","structure","overheat"];this.actors.every((t=>t.type===c.MECH))&&e.push("overcharge"),this.actors.every((t=>t.type===c.NPC))&&e.push("recharge"),e.map((e=>{const s=e,n=t.api.Utils.i18n(d[e]),o=t.api.Utils.i18n(i.macro),a=[{id:s,name:n,listName:`${o?`${o}: `:""}${n}`,encodedValue:[e,"none"].join(this.delimiter)}],c={id:"macros",type:"system"};this.addActions(a,c)}))}#u(){const t=this.actor?.system?.loadout;if(!t)return;const e=new Map,s=new Map,i=t.systems,n=new Map(i.map((t=>[t.id,t.value]))),o=t.frame,a=new Map([[o.id,o.value]]),l=t.weapon_mounts;for(const t of l)0!==t.slots.length&&t.slots.map((t=>{t.weapon&&this.#f(t.weapon.value)&&e.set(t.weapon.id,t.weapon.value),t.mod&&this.#f(t.mod.value)&&s.set(t.mod.id,t.mod.value)}));this.#I(e,c.MECH_WEAPON),this.#A(e,c.MECH_WEAPON),this.#I(s,c.WEAPON_MOD),this.#A(s,c.WEAPON_MOD),this.#A(n,c.MECH_SYSTEM),this.#b(a)}#p(){if(0===this.items.size)return;const e=new Map;for(const[t,s]of this.items){const i=s.system.type;if(this.#f(s)){const n=e.get(i)??new Map;n.set(t,s),e.set(i,n)}}for(const[s,n]of e){const e=u[s]?.groupId;if(!e)continue;const o={id:e,type:"system"},a=[...n].map((([e,n])=>{const o=n.name,a=u[s]?.actionType,c=t.api.Utils.i18n(i[a]),l=`${c?`${c}: `:""}${o}`,r=[a,e].join(this.delimiter);return{id:e,name:o,listName:l,encodedValue:r}}));this.addActions(a,o)}}#h(){const e=this.pilot??this.actor;if(0===e.items.size)return;const s=new Map,i=t.api.Utils.sortItemsByName(e.items);for(const[t,e]of i)e.system.equipped&&s.set(t,e);this.#d(s)}#w(e){if(0===e.size)return;const s=r[c.SKILL]?.actionType,n=r[c.SKILL]?.groupId;if(!n||!s)return;const o={id:n,type:"system"},a=[...t.api.Utils.sortItemsByName(e)].map((([e,n])=>{const o=e,a=n.name,c=t.api.Utils.i18n(i[s]),l=`${c?`${c}: `:""}${a}`,r=[s,o].join(this.delimiter);return{id:o,name:a,listName:l,encodedValue:r}}));this.addActions(a,o)}#l(){const e=r.stat?.actionType,s=r.stat?.groupId,n=Object.entries({hull:"system.hull",agi:"system.agi",sys:"system.sys",eng:"system.eng",grit:"system.grit",tier:"system.tier"}).map((([s,n])=>{if(!this.actors.every((t=>void 0!==t.system[s])))return;const o=n,a=t.api.Utils.i18n(h[s]);return{id:o,name:a,listName:`${`${t.api.Utils.i18n(i[e])}: `??""}${a}`,encodedValue:[e,n].join(this.delimiter)}})).filter((t=>void 0!==t)),o={id:s,type:"system"};this.addActions(n,o)}#r(){if(0===this.tokens?.length)return;const e="status",s=CONFIG.statusEffects.filter((t=>""!==t.id));if(0===s.length)return;const n=s.map((s=>{const n=s.id,o=t.api.Utils.i18n(s.name)??s.name,a=`${`${t.api.Utils.i18n(i[e])}: `??""}${o}`,c=[e,n].join(this.delimiter),l=this.actors.every((t=>game.version.startsWith("11")?t.effects.some((t=>t.statuses.some((t=>t===n))&&!t?.disabled)):t.effects.some((t=>t.flags?.core?.statusId===n&&!t?.disabled))))?" active":"",r=`toggle${l}`,d=t.api.Utils.getImage(s);return{id:n,name:o,encodedValue:c,img:d,cssClass:r,listName:a}}));this.addActions(n,{id:"statuses",type:"system"})}#H(e){if(0===e.size)return;const s=r[c.TALENT]?.actionType,o=new Map;for(const[t,s]of e){const e=s.system.curr_rank;for(let i=0;i<e;i++){s.system.ranks[i].actions.map(((e,s)=>{const n=e.activation;if(!this.showItemsWithoutActivations&&this.nonActivations.includes(n))return;o.has(n)||o.set(n,new Map);const a=[t,`system.ranks.${i}.actions.${s}`].join(l);o.get(n).set(a,e)}))}}for(const[e,a]of o){const o=n[e]?.groupId;if(!o)continue;const c={id:o,type:"system"},l=[...a].map((([e,n])=>{const o=n.name,a=t.api.Utils.i18n(i[s]),c=`${a?`${a}: `:""}${o}`,l=[s,e].join(this.delimiter);return{id:e,name:o,listName:c,encodedValue:l}})).sort(this.#g);this.addActions(l,c)}}#I(e,s){if(0===e.size)return;const n=r[s]?.actionType,o=r[s]?.groupId;if(!o||!n)return;const a={id:o,type:"system"},c=[...t.api.Utils.sortItemsByName(e)].map((([e,s])=>{const o=e,a=s.name,c=t.api.Utils.i18n(i[n]),l=`${c?`${c}: `:""}${a}`,r=[n,o].join(this.delimiter);return{id:o,name:a,listName:l,encodedValue:r}}));this.addActions(c,a)}#t(){const e=["deployable","mech","npc","pilot"],s=t.api.Utils.getControlledTokens()?.filter((t=>t.actor)).map((t=>t.actor));return s.every((t=>e.includes(t.type)))?s:[]}#e(){const e=["deployable","mech","npc","pilot"],s=t.api.Utils.getControlledTokens(),i=s?.filter((t=>t.actor)).map((t=>t.actor));return i.every((t=>e.includes(t.type)))?s:[]}#f(t){switch(t.type){case c.NPC_FEATURE:if(!this.showUnchargedNpcFeatures&&t.isRecharge()&&!t.system.charged)return!1;case c.MECH_SYSTEM:case c.MECH_WEAPON:case c.WEAPON_MOD:if(!this.showDestroyedItems&&t.system.destroyed)return!1;case c.PILOT_WEAPON:if(!this.showUnloadedWeapons&&t.isLoading()&&!t.system.loaded)return!1;if(!this.showItemsWithoutUses&&t.isLimited()&&!t.system.uses.value)return!1;break;case c.BOND:case c.TALENT:case c.SKILL:break;default:return!1}return!0}#g(t,e){return t.name===e.name?0:t.name<e.name?-1:1}}}));const y=await import("../../token-action-hud-core/dist/token-action-hud-core.min.mjs"),g=y.ActionHandler,A=y.ActionListExtender,k=y.CategoryManager,b=y.PreRollHandler,f=y.RollHandler,I=y.SystemManager,w=y.Utils,H=y.Logger;let v=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=a;Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const s=Object.values(e);v={layout:[{nestId:"attacks",id:"attacks",name:t.api.Utils.i18n("tokenActionHud.lancer.attacks"),groups:[{...e.mechWeapons,nestId:"attacks_mech-weapons"},{...e.weaponMods,nestId:"attacks_weapon-mods"},{...e.pilotWeapons,nestId:"attacks_pilot-weapons"},{...e.basicAttack,nestId:"attacks_basic-attack"}]},{nestId:"techs",id:"techs",name:t.api.Utils.i18n("tokenActionHud.lancer.techs"),groups:[{...e.quickTechs,nestId:"techs_quick-techs"},{...e.fullTechs,nestId:"techs_full-techs"},{...e.invades,nestId:"techs_invades"},{...e.basicTech,nestId:"techs_basic-tech"}]},{nestId:"activations",id:"activations",name:t.api.Utils.i18n("tokenActionHud.lancer.activations"),groups:[{...e.corePower,nestId:"activations_core-power"},{...e.protocols,nestId:"activations_protocols"},{...e.quickActions,nestId:"activations_quick-actions"},{...e.fullActions,nestId:"activations_full-actions"},{...e.freeActions,nestId:"activations_free-actions"},{...e.reactions,nestId:"activations_reactions"},{...e.traits,nestId:"activations_traits"},{...e.other,nestId:"activations_other"}]},{nestId:"skills",id:"skills",name:t.api.Utils.i18n("tokenActionHud.lancer.skills"),groups:[{...e.stats,nestId:"skills_stats"},{...e.skills,nestId:"skills_skills"},{...e.bonds,nestId:"skills_bonds"}]},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.lancer.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.macros,nestId:"utility_macros"}]},{nestId:"statuses",id:"statuses",name:t.api.Utils.i18n("tokenActionHud.lancer.statuses"),groups:[{...e.statuses,nestId:"statuses_statuses"}]}],groups:s}}));let T=null;function register(e){game.settings.register(t.ID,"showDestroyedItems",{name:game.i18n.localize("tokenActionHud.lancer.settings.showDestroyedItems.name"),hint:game.i18n.localize("tokenActionHud.lancer.settings.showDestroyedItems.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{e(t)}}),game.settings.register(t.ID,"showItemsWithoutActivations",{name:game.i18n.localize("tokenActionHud.lancer.settings.showItemsWithoutActivations.name"),hint:game.i18n.localize("tokenActionHud.lancer.settings.showItemsWithoutActivations.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{e(t)}}),game.settings.register(t.ID,"showItemsWithoutUses",{name:game.i18n.localize("tokenActionHud.lancer.settings.showItemsWithoutUses.name"),hint:game.i18n.localize("tokenActionHud.lancer.settings.showItemsWithoutUses.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{e(t)}}),game.settings.register(t.ID,"showUnequippedItems",{name:game.i18n.localize("tokenActionHud.lancer.settings.showUnequippedItems.name"),hint:game.i18n.localize("tokenActionHud.lancer.settings.showUnequippedItems.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{e(t)}}),game.settings.register(t.ID,"showUnchargedNpcFeatures",{name:game.i18n.localize("tokenActionHud.lancer.settings.showUnchargedNpcFeatures.name"),hint:game.i18n.localize("tokenActionHud.lancer.settings.showUnchargedNpcFeatures.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{e(t)}}),game.settings.register(t.ID,"showUnloadedWeapons",{name:game.i18n.localize("tokenActionHud.lancer.settings.showUnloadedWeapons.name"),hint:game.i18n.localize("tokenActionHud.lancer.settings.showUnloadedWeapons.hint"),scope:"client",config:!0,type:Boolean,default:!1,onChange:t=>{e(t)}})}Hooks.once("tokenActionHudCoreApiReady",(async t=>{T=class RollHandler extends t.api.RollHandler{async handleActionClick(t,e){const[s,i]=e.split(this.delimiter);if(["weapon"].includes(s)&&this.isRenderItem())return this.doRenderItem(this.actor,i);const n=["pilot","npc","mech","deployable"];this.actor?await this.#v(t,this.actor,this.token,s,i):canvas.tokens.controlled.filter((t=>n.includes(t.actor?.type)))}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#v(t,e,s,i,n){const o=e?.system?.pilot?e.system.pilot.value:e;switch(i){case"activation":case"frame":this.#T(e,n);break;case"basic-attack":this.#N(e);break;case"basic-tech":this.#U(e);break;case"bond":this.#S(o,n);break;case"combat":this.#_(s,n);break;case"core":this.#E(e,n);break;case"full-repair":this.#C(e);break;case"overcharge":this.#M(e);break;case"overheat":this.#W(e);break;case"pilot-weapon":this.#$(o,n);break;case"recharge":this.#O(e);break;case"refresh-powers":this.#P(o,n);break;case"skill":this.#R(o,n);break;case"stabilize":this.#B(e);break;case"stat":this.#F(e,n);break;case"status":await this.#L(e,s,n);break;case"structure":this.#D(e);break;case"system":this.#z(e,n);break;case"talent":this.#T(o,n);break;case"tech":this.#q(e,n);break;case"weapon":this.#$(e,n)}}#T(t,e){const s=e.split(l),i=s[0],n=s[1];t.items.get(i).beginActivationFlow(n)}#N(t){t.beginBasicAttackFlow()}#U(t){t.beginBasicTechAttackFlow()}#S(t,e){const s=e.split(l),i=s[0],n=parseInt(s[1]);t.items.get(i).beginBondPowerFlow(n)}async#_(t,e){if(!game.combat)return;const s=game.combat?.combatants.find((e=>e.token===t.document));if(s)switch(e){case"activate":await(game.combat?.activateCombatant(s.id));break;case"deactivate":await(game.combat?.nextTurn())}}#E(t,e){const s=e.split(l),i=s[0],n=s[1];t.items.get(i).beginCoreActiveFlow(n)}#j(t,e,s){e.items.get(s).toChat(t)}#C(t){t.beginFullRepairFlow()}#M(t){t.beginOverchargeFlow()}#W(t){t.beginOverheatFlow()}#P(t,e){t.items.get(e).refreshPowers()}#O(t){t.beginRechargeFlow()}#R(t,e){t.items.get(e).beginSkillFlow()}#B(t){t.beginStabilizeFlow()}#F(t,e){t.beginStatFlow(e)}async#L(t,e,s){const i=CONFIG.statusEffects.find((t=>t.id===s));if(!i)return;const n=this.#V(t,s);n?.disabled&&await n.delete(),await e.toggleEffect(i),Hooks.callAll("forceUpdateTokenActionHud")}#D(t){t.beginStructureFlow()}#z(t,e){t.items.get(e).beginSystemFlow()}#q(t,e){t.items.get(e).beginTechAttackFlow()}#$(t,e){t.items.get(e).beginWeaponAttackFlow()}#V(t,e){return game.version.startsWith("11")?t.effects.find((t=>t.statuses.every((t=>t===e)))):t.effects.find((t=>t.flags?.core?.statusId===e))}}}));let N=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{N=class SystemManager extends e.api.SystemManager{getActionHandler(){return new p}getAvailableRollHandlers(){return{core:"Core LANCER"}}getRollHandler(t){let e;return e=new T,e}async registerDefaults(){return v}registerSettings(t){register(t)}registerStyles(){return{template:{class:"tah-style-lancer-style",file:"tah-lancer-style",moduleId:t.ID,name:"LANCER Style"}}}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const e=game.modules.get(t.ID);e.api={requiredCoreModuleVersion:"1.5",SystemManager:N},Hooks.call("tokenActionHudSystemReady",e)}));export{i as ACTION_TYPE,n as ACTIVATION_TYPE,p as ActionHandler,e as CORE_MODULE,g as CoreActionHandler,A as CoreActionListExtender,k as CoreCategoryManager,b as CorePreRollHandler,f as CoreRollHandler,I as CoreSystemManager,w as CoreUtils,v as DEFAULTS,o as DEFAULT_ACTION_NAME,c as ENTRY_TYPE,a as GROUP,l as ID_DELIMITER,r as ITEM_TYPE,H as Logger,d as MACRO_TYPE,t as MODULE,u as NPC_FEATURE_TYPE,s as REQUIRED_CORE_MODULE_VERSION,T as RollHandler,h as STAT_TYPE,N as SystemManager,m as Utils,register};
